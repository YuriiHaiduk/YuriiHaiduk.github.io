*{
  box-sizing: border-box;
  outline: none;
  outline-width: 0;
}
body{
  overflow-x: hidden;
  font-family: $font-montserrat;
  font-size: 16px;
  color:$black;
  background: $black;

}
ul{
  list-style: none;
  padding-left: 0;
}
a{
  text-decoration: none;
}
.container{
  max-width: 1560px;
  padding: 0px 15px;
  margin:0 auto;
  &.container--small{
    max-width: 1170px;
  }
}
.wrapper {
  //overflow: hidden;
  display: flex;
  flex-direction: column;
  height:100%;
  min-height: 100vh;
}
.content {
  -webkit-box-flex: 1;
  flex-grow: 1;
}
.footer{
  z-index: 1;
}

.blue-mark{
  color: #199fff;
  text-shadow: 0 5px 25px #199fff, 0 5px 50px #199fff;
}
.golden-mark{
  color: gold;
  text-shadow: 0 5px 25px rgba(222, 189, 16, 0.85), 0 5px 50px #f6d217;
}

@media(min-width: 992px){

  ::-webkit-scrollbar {
    width: 10px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

}

input::-webkit-input-placeholder       {opacity: 1; transition: opacity 0.3s ease;}
input::-moz-placeholder                {opacity: 1; transition: opacity 0.3s ease;}
input:-moz-placeholder                 {opacity: 1; transition: opacity 0.3s ease;}
input:-ms-input-placeholder            {opacity: 1; transition: opacity 0.3s ease;}
input:focus::-webkit-input-placeholder {opacity: 0; transition: opacity 0.3s ease;}
input:focus::-moz-placeholder          {opacity: 0; transition: opacity 0.3s ease;}
input:focus:-moz-placeholder           {opacity: 0; transition: opacity 0.3s ease;}
input:focus:-ms-input-placeholder      {opacity: 0; transition: opacity 0.3s ease;}

input{
  outline: none;
}
button{
  outline: none;
  border:none;
  background: none;
}
.section{
  padding-top: 30px;
  padding-bottom: 30px;
}
.section__title{
  color:#ffffff;
  font-size: 38px;
  text-align: center;
  margin: 0;
  margin-bottom: 25px;
}

@media(max-width: 1200px){
  .section__title{
    font-size: 35px;
  }
}
@media(max-width: 991px){
  .section__title{
    font-size: 31px;
  }
}

@media(max-width: 767px){
  .section__title{
    font-size: 27px;
  }
}

@media(max-width: 580px){
  .section__title{
    font-size: 23px;
  }
}






.no-scroll{
  overflow:hidden;
}
.overlay{
  position: fixed;
  top:0;
  left:0;
  width: 100%;
  height: 100%;
  background: rgba(black,0.7);
  z-index: 7;
  visibility: hidden;
  opacity: 0;
  transition: 0.3s;
  &.active{
    visibility: visible;
    opacity: 1;
  }
}


.btn-to-top{
  position: fixed;
  right: -100px;
  bottom: 15%;
  width: 40px;
  height: 40px;
  background: $black;
  color: #fff;
  font-size: 30px;
  text-align: center;
  cursor: pointer;
  transition: $transition-time * 2;
  &:hover{
    background: rgba($black,0.7);
  }
  &.active{
    right:0;
    z-index: 2;
  }
}

.breadcrumbs{
  margin-bottom: 30px;
  a{
    font-size: 14px;
    color:rgba($black,0.6);
    position: relative;
    &:not(:last-child){
      &::after{
        content: '\2192';
        position: absolute;
        font-size: 21px;
        right: -19px;
        top: -4px;
      }
      margin-right: 25px;
    }
    &:hover{
      text-decoration: underline;
    }
  }
}



//tabs style
//tabs  style
/* Style the tab */
.tab,.tabs {
  overflow: hidden;
}

/* Style the buttons that are used to open the tab content */
.tabs-header button{
  position: relative;
}

/* Change background color of buttons on hover */
.tab button:hover ,.tabs button:hover{
  //background-color: #ddd;
}

/* Create an active/current tablink class */
.tabs-info button.active ,.tabs-info button.active {
  //&::before{
  //  width: 100%;
  //}
}

/* Style the tab content */
.tabcontent ,.tab-b{
  display: none;
  border-top: none;
}
.tab-b:nth-child(1){
  display: flex;
}
.tabcontent,.tab-b {
  animation: fadeEffect 1.3s; /* Fading effect takes 1 second */
}

/* Go from zero to full opacity */
@keyframes fadeEffect {
  from {opacity: 0;}
  to {opacity: 1;}
}



//custom radiobutton
.container-radiobutton{
  position: relative;
  cursor: pointer;
  padding-left: 30px;
  &:not(:last-child){
    margin-bottom: 8px;
  }
}
.container-radiobutton input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark-radiobutton {
  position: absolute;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: #fff;
  border-radius: 50%;
  border: 1px solid #CDCDCD;
}

/* On mouse-over, add a grey background color */
.container-radiobutton:hover input ~ .checkmark-radiobutton {
  background-color: lighten(#ccc,8%);
}

/* When the radio button is checked, add a blue background */
.container-radiobutton input:checked ~ .checkmark-radiobutton {
  //background-color: #2196F3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark-radiobutton:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container-radiobutton input:checked ~ .checkmark-radiobutton:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container-radiobutton .checkmark-radiobutton:after {
  top: 4px;
  left: 4px;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: $black;
}

// custom checkbox
.container-checkbox{
  position: relative;
  display: flex;
  align-items: center;
  padding-top: 3px;
  padding-left: 29px;
}
/* Hide the browser's default checkbox */
.container-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 2px;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: $white;
  border-radius: 2px;
  border: 1px solid rgba(#323232,0.2);
}
.container-checkbox .checkmark::after {
  display: block;
  left: 6px;
  top: 2px;
  width: 4px;
  height: 9px;
  border: solid transparent;
  //border-color: transparent;
  border-width: 0 1px 1px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* On mouse-over, add a grey background color */
.container-checkbox:hover input ~ .checkmark {
  //background-color: #D4D4D4;
}

/* When the checkbox is checked, add a blue background */
.container-checkbox input:checked ~ .checkmark {
  background: #4067A3;
  border-radius: 2px;
  //border-color:red;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container-checkbox input:checked ~ .checkmark:after {
  display: block;
  border-color: $white!important;
}



// custom input
.form-label{
  &__name{
    display: block;
    margin-bottom: 7px;
    color:$black;
  }
  &__input{
    color:$black;
    border: 1px solid #000000;
    box-sizing: border-box;
    border-radius: 4px;
    padding: 12px 16px;
    resize: none;
  }
}
